<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间用来区分执行的sql语句-->
<mapper namespace="learn.mybatis.crud3.mapper.dynamicProxy.dao.IStudentDao">
   <!--<insert id="insertStu" parameterType="learn.mybatis.primary.beans.Student" >-->
    <!--parameterType 可以不写-->
    <insert id="insertStudent" parameterType="Student" >
    insert into  student(name,age,score) values (#{name},#{age},#{score})
   </insert>


    <insert id="insertStudentCacheId" >
        insert into  student(name,age,score) values (#{name},#{age},#{score})
--  order mysql 数据库是先插入数据 在生成id
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT @@IDENTITY
        </selectKey>
    </insert>

    <delete id="deleteStudentById" >
        DELETE  FROM  student WHERE id = #{id} <!--#{id} 是占位符，里面填什么都行-->
    </delete>

    <update id="updateStudent" >
        update student set name = #{name},age = #{age},score=#{score} where id = #{id}
    </update>
    <select id="selectAllStudents" resultType="Student">
        select id,name,age,score from student
    </select>

    <select id="selectStudentById" resultType="Student">
        select id,name,age,score from student where id = #{id}
    </select>
    <select id="selectStudentsByName" resultType="Student" >
        <!--select id,name,age,score from student where name  like concat('%',#{name},'%')-->
        select id,name,age,score from student where name  like '%' #{name}   '%'
        <!--select id,name,age,score from student where name  like '%${value}%'-->

    </select>

    <select id="selectStudentsByCondition" resultType="Student" >
        select id,name,age,score from student where name  like '%' #{nameCondi} '%' and
        age > #{ageCondi} and score > #{stu.score}
    </select>
    <select id="selectStudentsByConditionIndex" resultType="Student" >
        select id,name,age,score from student where name  like '%' #{0} '%' and
        age > #{1}
    </select>
    <!--
     #{}中可以放什么内容
     1)参数对象的属性
     2)随意内容 此时的#{}为占位符
     3)参数为map 的key值
     4)参数为map时 若key 对应的的值为对象，则可将该对象的属性放入#{stu.score}
     5)参数的索引号

    -->
</mapper>